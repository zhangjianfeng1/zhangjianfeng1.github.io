{"version":3,"sources":["webpack:///./src/styles/E:/vue_product/sxsx_project/src/styles/lib/core/reset.scss","webpack:///./src/styles/E:/vue_product/sxsx_project/src/styles/lib/core/classes/_prefix.scss","webpack:///./src/styles/E:/vue_product/sxsx_project/src/styles/lib/core/base.scss","webpack:///./src/styles/E:/vue_product/sxsx_project/src/styles/lib/core/classes/_user-interface.scss","webpack:///./src/styles/E:/vue_product/sxsx_project/src/styles/lib/core/classes/_overflow.scss","webpack:///./src/styles/E:/vue_product/sxsx_project/src/styles/lib/core/classes/_clearfix.scss","webpack:///./src/styles/E:/vue_product/sxsx_project/src/styles/lib/core/classes/_iconfont.scss","webpack:///./src/styles/E:/vue_product/sxsx_project/src/styles/lib/core/variables.scss","webpack:///./src/styles/E:/vue_product/sxsx_project/src/styles/usage/module/m-index.scss","webpack:///./src/styles/E:/vue_product/sxsx_project/src/styles/lib/core/classes/_flex.scss","webpack:///./src/styles/E:/vue_product/sxsx_project/src/styles/usage/module/common.scss"],"names":[],"mappings":"AAUA,iBCMY,8BAIR,sBDNA,uCAA6C,CAKjD,UAEI,gBACA,WAAY,CAIhB,oBAEQ,YAAa,CAMrB,KACI,sBEN0B,cAQG,gBAtBA,yBCeI,iBH2BrC,KACI,SACA,gBEpC2B,gBAIF,uDAFgD,CFwC7E,2GAuBI,SACA,SAAU,CAKd,sDAUI,oBACA,mBAAoB,CAIxB,yDAYI,iBAAkB,CAItB,mCAOI,iBAAkB,CAItB,MACI,yBACA,iBACA,mBACA,eAAgB,CAIpB,WAGI,eAAgB,CAKpB,aAEI,SACA,qBAAsB,CAI1B,oFAYI,aAAc,CAIlB,mBAGI,oBAAqB,CAIzB,oDAII,WAAgB,CAIpB,iBIpLQ,cAEA,gCAAiC,CJyLzC,SACI,eAAgB,CAIpB,+BAKI,cAAe,CAKnB,6BAII,aAAc,CAIjB,iEAFO,SAAU,CAKlB,iDAEI,UACA,QAAS,CAIb,sJCtNY,wBEGuB,gBH4NnC,KACI,4BAAkC,CAItC,cAKI,oBAAqB,CAKzB,MAEI,0BAA2B,CAI/B,EACI,aElN6B,CFyNjC,4BKhQY,cACA,gBACA,WACA,SACA,WAAgB,CCLpB,WACI,mBC2DU,oIDtDkB,CAEhC,QACI,6BACA,kBACA,mCAGA,kCACA,qBAAsB,CEzBlC,KAAK,YAAa,UAAU,CAC5B,OACC,YCmBe,oBACA,qBAQZ,aAgGgB,4BACA,6BA2BR,8BAIR,qBD1J2B,CAG/B,OACC,YACA,mBACA,iBAAiB,CA+BjB,UA7BC,WACA,kBACA,iBACA,iBACA,kBACD,CAAE,YAED,iBAAiB,CAEjB,gBACQ,QAAS,MACjB,WACA,YACA,cACA,kBACA,iBACA,WACA,gBAEA,CAAE,eACK,UAAW,QAClB,WACA,YACA,aAAa,CAKb,mBAHC,WACA,WACD,CAGF,QACI,WACH,gBACA,gBACA,MAAM,CAGP,IACC,WAAW,CAoBX,OAhBE,UAAU,CAeX,iBChDc,oBACA,qBAQZ,aAAS,WDyBC,CAaV,UAVC,UCoEe,4BACA,6BA2BR,8BAIR,sBA8BgB,wBACA,+BA8DhB,uBAsHgB,yBACA,2BAShB,mBD5TC,WAAW,CAKZ,eAFK,gBAAgB,CAMzB,QACI,WACH,YACA,eACA,WACA,eAED,CEhFA,WACC,mBACA,gHAAgH","file":"static/css/app.56436bfd764f9e73edd15d06e6364441.css","sourcesContent":["@charset \"utf-8\";\r\n@import \"function\";\r\n@import \"classes\";\r\n/**\r\n * Yo框架全局Reset\r\n * Yo重置Mobile及高级浏览器上常见的差异\r\n */\r\n\r\n// 1. 将元素的盒模型统一为: border-box\r\n// 2. 清除元素tap时出现的焦点框\r\n*,\r\n::before,\r\n::after {\r\n    @include box-sizing(border-box);\r\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n}\r\n\r\n// 1. 默认禁止body滚动\r\n// 2. 默认铺满屏幕高度\r\nhtml,\r\nbody {\r\n    overflow: hidden;\r\n    height: 100%;\r\n}\r\n\r\n// 1. 隐藏页面滚动条\r\n::-webkit-scrollbar {\r\n    @if map-get($setting, is-scrollbar) == false {\r\n        display: none;\r\n    }\r\n}\r\n\r\n// 1. 防止用户自定义网页背景及文字颜色、大小影响\r\n// 2. 禁止选中文本\r\nhtml {\r\n    background-color: map-get($base, doc-bgcolor);\r\n    color: map-get($base, color);\r\n    // 定义root字号，作为rem计算基准\r\n    @if map-get($base, responsive-type) == scaling {\r\n        // 如果是跟随屏幕大小而变的场景，使用 vw\r\n        font-size: map-get($base, font-size-root-scaling);\r\n    } @else {\r\n        // 如果是常规场景，使用 px\r\n        font-size: map-get($base, font-size-root);\r\n    }\r\n    // 是否允许横竖屏时字号调整\r\n    @if map-get($setting, is-text-size-adjust) == false {\r\n        // 如果为flase，则不允许自动调整\r\n        -webkit-text-size-adjust: 100%;\r\n    }\r\n    @include user-select;\r\n}\r\n\r\n// 1. 清除body的默认margin\r\n// 2. 定义页面的默认字号\r\n// 3. 定义页面的默认行高\r\n// 4. 定义页面的默认字体\r\nbody {\r\n    margin: 0;\r\n    font-size: map-get($base, font-size);\r\n    line-height: map-get($base, line-height);\r\n    font-family: map-get($base, font-family);\r\n}\r\n\r\n// 1. 清除某些元素在不同浏览器下内外补白不同造成的影响\r\nul,\r\nol,\r\ndl,\r\ndd,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6,\r\nfigure,\r\nform,\r\nfieldset,\r\nlegend,\r\ninput,\r\ntextarea,\r\nbutton,\r\np,\r\nblockquote,\r\nth,\r\ntd,\r\npre,\r\nxmp {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n// 1. 为不继承的元素设定继承父级行高\r\n// 2. 为不继承的元素设定继承父级字体\r\ninput,\r\ntextarea,\r\nbutton,\r\nselect,\r\npre,\r\nxmp,\r\ntt,\r\ncode,\r\nkbd,\r\nsamp {\r\n    line-height: inherit;\r\n    font-family: inherit;\r\n}\r\n\r\n// 1. 为不继承的元素设定继承父级字号\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6,\r\nsmall,\r\nbig,\r\ninput,\r\ntextarea,\r\nbutton,\r\nselect {\r\n    font-size: inherit;\r\n}\r\n\r\n// 1. 重置斜体表现为正常文本\r\naddress,\r\ncite,\r\ndfn,\r\nem,\r\ni,\r\noptgroup,\r\nvar {\r\n    font-style: normal;\r\n}\r\n\r\n// 1. 清除单元格边距并让边框合并\r\ntable {\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n    table-layout: fixed;\r\n    text-align: left;\r\n}\r\n\r\n// 1. 清除列表默认序号\r\nul,\r\nol,\r\nmenu {\r\n    list-style: none;\r\n}\r\n\r\n// 1. 清除默认边框\r\n// 2. 清除img底部留白问题，并使得默认居中\r\nfieldset,\r\nimg {\r\n    border: 0;\r\n    vertical-align: middle;\r\n}\r\n\r\n// 1. 设置HTML5部分新增元素为块元素\r\narticle,\r\naside,\r\ndetails,\r\nfigcaption,\r\nfigure,\r\nfooter,\r\nheader,\r\nmain,\r\nmenu,\r\nnav,\r\nsection,\r\nsummary {\r\n    display: block;\r\n}\r\n\r\n// 1. 设置HTML5新增媒体元素与img, object保持一致\r\naudio,\r\ncanvas,\r\nvideo {\r\n    display: inline-block;\r\n}\r\n\r\n// 1. 清除引用元素的默认派生标识\r\nblockquote:before,\r\nblockquote:after,\r\nq:before,\r\nq:after {\r\n    content: \"\\0020\";\r\n}\r\n\r\n// 1. 设置文本域和代码块在需要时出现滚动条\r\ntextarea,\r\npre,\r\nxmp {\r\n    @include overflow;\r\n}\r\n\r\n// 1. 设置文本域滚可拖动改变垂直方向尺寸\r\ntextarea {\r\n    resize: vertical;\r\n}\r\n\r\n// 1. 清除webkit下表单元素的outline\r\ninput,\r\ntextarea,\r\nbutton,\r\nselect\r\na {\r\n    outline: 0 none;\r\n}\r\n\r\n// 1. 让表单元素具有颜色继承\r\n// 2. iOS上当禁用时会设置opacity: .4\r\ninput,\r\ntextarea,\r\nbutton,\r\nselect {\r\n    color: inherit;\r\n    &:disabled {\r\n        opacity: 1;\r\n    }\r\n}\r\n\r\n// 1. 清除Firefox按钮内部边框和补白\r\nbutton::-moz-focus-inner,\r\ninput::-moz-focus-inner {\r\n    padding: 0;\r\n    border: 0;\r\n}\r\n\r\n// 1. 重置按钮的外观\r\ninput[type=\"button\"],\r\ninput[type=\"submit\"],\r\ninput[type=\"reset\"],\r\ninput[type=\"file\"]::-webkit-file-upload-button,\r\ninput[type=\"search\"]::-webkit-search-cancel-button {\r\n    @include appearance;\r\n}\r\n\r\n// 1. 重置mark元素的默认背景色\r\nmark {\r\n    background-color: rgba(0, 0, 0, 0);\r\n}\r\n\r\n// 1. 清除文本线条装饰\r\na,\r\nins,\r\ns,\r\nu,\r\ndel {\r\n    text-decoration: none;\r\n}\r\n\r\n// 1. 禁止长按链接与图片弹出菜单\r\n// issues: 在iOS8.1下此设置对a仍无效\r\na,\r\nimg {\r\n    -webkit-touch-callout: none;\r\n}\r\n\r\n// 1. 预设默认链接表现\r\na {\r\n    color: map-get($base, link-color);\r\n}\r\n\r\n// 1. fix Android Browser 4.2.* 及以下 input:checked ~ .xxx 失效的问题\r\nhtml + input {}\r\n\r\n// 1. 预设清除浮动\r\n.g-clear,\r\n.g-mod {\r\n    @include clearfix;\r\n}\r\n\r\n// 1. 使用字体图标\r\n@include iconfont;\n\n\n// WEBPACK FOOTER //\n// ./src/styles/E:/vue_product/sxsx_project/src/styles/lib/core/reset.scss","@charset \"utf-8\";\r\n/**\r\n * @module 常用方法\r\n * @description 给需要的属性加厂家前缀\r\n * @method prefix\r\n * @version 1.0.0\r\n * @param {String} $property 指定属性 <1.0.0>\r\n * @param {String} $value 指定属性值 <1.0.0>\r\n * @skip\r\n */\r\n@mixin prefix($property, $value) {\r\n    // 老式浏览器\r\n    // 是否开启厂商前缀支持\r\n    @if map-get($setting, is-vendor-prefix) {\r\n        // 遍历输出厂商代码\r\n        @each $vendor in map-get($setting, vendor-prefix) {\r\n            #{$vendor}#{$property}: $value;\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    #{$property}: $value;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/styles/E:/vue_product/sxsx_project/src/styles/lib/core/classes/_prefix.scss","@charset \"utf-8\";\r\n/**\r\n * Yo框架全局base定义\r\n * 本文件与variables不同地方在于，这里所定义的map可以使用在variables和任何地方\r\n * 本文件中map使用\"_\"开头，extra中不使用\"_\"\r\n * base ⇌ extra\r\n */\r\n\r\n// base\r\n$_base: (\r\n    // root字号类型：normal | scaling\r\n    // normal表示root字号使用 `font-size-root`\r\n    // scaling表示root字号使用 `font-size-root-scaling`\r\n    responsive-type:        normal,\r\n    // html root使用100px，方便rem单位的换算\r\n    font-size-root:         100px,\r\n    // 适配：用于做元素随屏幕大小而变化的情况\r\n    font-size-root-scaling: 31.25vw,\r\n    // body的默认字号（文档基准字号）\r\n    // chrome37-45/opera24-33在body上使用rem时有个bug（其他版本未测），后续版本已被修复:\r\n    // 只要引用了外部样式，不论里面的内容是什么，body上的rem就会失效\r\n    // 这时在开发者工具里，关闭又开启一次该条属性，则生效，刷新又挂\r\n    // 由于body是html的子元素，所以对于body来讲，此时rem与em的效果是相同的\r\n    font-size:            .14em,\r\n    // font-family\r\n    font-family:          #{\"Helvetica Neue\", Helvetica, STHeiTi, sans-serif},\r\n    // lin-height\r\n    line-height:          1.5,\r\n    // 默认文档背景色\r\n    doc-bgcolor:          #eee,\r\n    // 默认边框色\r\n    border-color:         #ccc,\r\n    // 默认次级边框色\r\n    sub-border-color:     #ddd,\r\n    // 默认背景颜色\r\n    bgcolor:              #fafafa,\r\n    // 默认文本颜色\r\n    color:                #212121,\r\n    // 默认次级文本颜色\r\n    sub-color:            #666,\r\n    // 默认边框色\r\n    disabled-border-color:#ccc,\r\n    // 默认文档颜色\r\n    disabled-bgcolor:     #e0e0e0,\r\n    // 默认禁用文本颜色\r\n    disabled-color:       #bbb,\r\n    // 主色调，高亮色，点亮色，反转色\r\n    light-color:          #00bcd4,\r\n    // 价格颜色\r\n    price-color:          #f60,\r\n    // 默认链接色\r\n    link-color:           #00afc7,\r\n    // 链接经过色\r\n    link-hover-color:     #f60\r\n);\n\n\n// WEBPACK FOOTER //\n// ./src/styles/E:/vue_product/sxsx_project/src/styles/lib/core/base.scss","@charset \"utf-8\";\r\n/**\r\n * @module 用户界面\r\n * @description 定义使用何种滤镜\r\n * @method filter\r\n * @version 1.7.0\r\n * @param {String} $filter 取值与`filter`属性一致 <1.7.0>\r\n */\r\n@mixin filter($filter...) {\r\n    @include prefix(filter, $filter);\r\n}\r\n\r\n/**\r\n * @module 用户界面\r\n * @description 定义UA默认外观\r\n * @method appearance\r\n * @version 1.0.0\r\n * @param {String} $appearance 取值与`appearance`属性一致，默认值：none <1.0.0>\r\n */\r\n@mixin appearance($appearance: none) {\r\n    @include prefix(appearance, $appearance);\r\n}\r\n\r\n/**\r\n * @module 用户界面\r\n * @description 定义如何选中内容\r\n * @method user-select\r\n * @version 1.0.0\r\n * @param {String} $user-select 取值与`user-select`属性一致，默认值：none <1.0.0>\r\n */\r\n@mixin user-select($user-select: none) {\r\n    @include prefix(user-select, $user-select);\r\n}\r\n\r\n/**\r\n * @module 用户界面\r\n * @description 定义盒模型\r\n * @method box-sizing\r\n * @version 1.0.0\r\n * @param {String} $box-sizing 指定盒模型类型，取值与`box-sizing`属性一致，默认值：border-box <1.0.0>\r\n */\r\n@mixin box-sizing($box-sizing: border-box) {\r\n    @include prefix(box-sizing, $box-sizing);\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/styles/E:/vue_product/sxsx_project/src/styles/lib/core/classes/_user-interface.scss","@charset \"utf-8\";\r\n/**\r\n * @module 常用方法\r\n * @description 定义是否有滚动条\r\n * @method overflow\r\n * @version 1.0.0\r\n * @param {String} $overflow 取值与最新原生语法一致，默认值：auto <1.0.0>\r\n */\r\n@mixin overflow($overflow: auto) {\r\n    @if $overflow == auto {\r\n        overflow: auto;\r\n        // 移除此条规则，防止iOS8.0+ webview崩溃\r\n        -webkit-overflow-scrolling: touch;\r\n    } @else {\r\n        overflow: $overflow;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/styles/E:/vue_product/sxsx_project/src/styles/lib/core/classes/_overflow.scss","@charset \"utf-8\";\r\n/**\r\n * @module 常用方法\r\n * @description 清除浮动方案\r\n * @method clearfix\r\n * @version 1.0.0\r\n * @param {String} $type 指定清除浮动的方式，包括：pseudo-element | bfc，默认值：pseudo-element <1.8.5>\r\n */\r\n@mixin clearfix($type: pseudo-element) {\r\n    @if $type == pseudo-element {\r\n        // 创建伪元素用以清除自身浮动\r\n        &::after{\r\n            display: block;\r\n            overflow: hidden;\r\n            clear: both;\r\n            height: 0;\r\n            content: \"\\0020\";\r\n        }\r\n    } @else {\r\n        // 创建BFC用以清除自身浮动\r\n        overflow: hidden;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/styles/E:/vue_product/sxsx_project/src/styles/lib/core/classes/_clearfix.scss","@charset \"utf-8\";\r\n/**\r\n * @module 常用方法\r\n * @description 定义字体图标\r\n * @method _iconfont\r\n * @version 1.0.0\r\n * @skip\r\n */\r\n@mixin iconfont() {\r\n    // 是否开启图标字体\r\n    @if map-get($ico, is-use) {\r\n        @font-face {\r\n            font-family: map-get($ico, font-name);\r\n            src:\r\n                // 现代浏览器\r\n                url(#{map-get($ico,font-path)}#{map-get($ico,font-name)}.woff) format(\"woff\"),\r\n                // Android2.2+\r\n                url(#{map-get($ico,font-path)}#{map-get($ico,font-name)}.ttf) format(\"truetype\");\r\n        }\r\n        .yo-ico {\r\n            font-family: map-get($ico, font-name) !important;\r\n            font-style: normal;\r\n            -webkit-font-smoothing: antialiased;\r\n            // PC端chrome有锯齿问题，Mobile不需要\r\n            // -webkit-text-stroke-width: .1px;\r\n            -moz-osx-font-smoothing: grayscale;\r\n            vertical-align: middle;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/styles/E:/vue_product/sxsx_project/src/styles/lib/core/classes/_iconfont.scss","@charset \"utf-8\";\r\n/**\r\n * Yo框架全局Variables\r\n * Yo基础变量map，如果不想定义某属性，将其value设置为null\r\n * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方\r\n * 本文件中map使用\"_\"开头，config中不使用\"_\"\r\n * variables ⇌ config\r\n */\r\n\r\n// 基本设置\r\n$_setting: (\r\n    // {String} 版本号\r\n    version:             \"3.0.8\",\r\n    // {Boolean} 是否开启厂商前缀\r\n    is-vendor-prefix:    true,\r\n    // {String} 厂商前缀\r\n    vendor-prefix:       -webkit-,\r\n    // {String} 背景图片服务器\r\n    bgimg-domain:        \"//s.qunarzz.com/yo/bgimg/\",\r\n    // {Boolean} 是否允许横竖屏时文本字号自动调整\r\n    is-text-size-adjust: true,\r\n    // {Boolean} 是否显示页面滚动条\r\n    is-scrollbar:        false\r\n);\r\n\r\n// responsive media types\r\n$_media-types: (\r\n    // {String} 横屏\r\n    landscape: \"(orientation: landscape)\",\r\n    // {String} 竖屏\r\n    portrait:  \"(orientation: portrait)\",\r\n    // 视网膜屏定义，这里不做非常细节的界定，比如完全一致的整数倍\r\n    // retina1x：< 1.5dppx；\r\n    // retina2x：1.5dppx ~ 2.49dppx\r\n    // retina3x：>= 2.5dppx\r\n    // {String} 非视网膜屏\r\n    retina1x:  \"(max--moz-device-pixel-ratio: 1.49),\r\n                (-webkit-max-device-pixel-ratio: 1.49),\r\n                (max-device-pixel-ratio: 1.49),\r\n                (max-resolution: 143dpi),\r\n                (max-resolution: 1.49dppx)\",\r\n    // {String} 视网膜屏2x\r\n    retina2x:  \"(min--moz-device-pixel-ratio: 1.5) and (max--moz-device-pixel-ratio: 2.49),\r\n                (-webkit-min-device-pixel-ratio: 1.5) and (-webkit-max-device-pixel-ratio: 2.49),\r\n                (min-device-pixel-ratio: 1.5) and (max-device-pixel-ratio: 2.49),\r\n                (min-resolution: 144dpi) and (max-resolution: 239dpi),\r\n                (min-resolution: 1.5dppx) and (max-resolution: 2.49dppx)\",\r\n    // {String} 视网膜屏3x\r\n    retina3x:  \"(min--moz-device-pixel-ratio: 2.5),\r\n                (-webkit-min-device-pixel-ratio: 2.5),\r\n                (min-device-pixel-ratio: 2.5),\r\n                (min-resolution: 240dpi),\r\n                (min-resolution: 2.5dppx)\",\r\n    // 待添加stop-points\r\n    // 用于常规手机横竖屏\r\n    xs:        \"(max-width: 767px)\",\r\n    // 用于常规pad横竖屏\r\n    s:         \"(min-width: 768px) and (max-width: 1024px)\",\r\n    // 用于常规笔记本\r\n    m:         \"(min-width: 1025px) and (max-width: 1280px)\",\r\n    // 用于常规台式机\r\n    l:         \"(min-width: 1281px) and (max-width: 1440px)\",\r\n    // 用于超大台式机\r\n    xl:        \"(min-width: 1441px)\"\r\n);\r\n\r\n// ico font\r\n$_ico: (\r\n    // {Boolean} 是否使用图标字体\r\n    is-use:     true,\r\n    // {String} 图标字体文件名\r\n    font-name:  yofont,\r\n    // {Url} 图标字体路径\r\n    font-path:  \"//ss.qunarzz.com/yo/font/1.0.3/\"\r\n);\r\n\r\n// z-index\r\n$_z-index: (\r\n    // {Number} 模态窗层级范围1000-1499\r\n    modal:       1000,\r\n    // {Number} 提示语层级范围1500-2499\r\n    toast:       1500\r\n);\r\n\r\n// Layout align\r\n$_align: (\r\n    // {String} 定义弹性水平对齐方式\r\n    justify-content: center,\r\n    // {String} 定义弹性垂直对齐方式\r\n    align-items:     center\r\n);\r\n\r\n// Layout column(1)\r\n$_column: (\r\n    // {Length} 容器高度，取值：[auto|cover]\r\n    size:     auto\r\n);\r\n\r\n// Layout flex\r\n$_flex: (\r\n    // {String} 定义是水平布局还是垂直布局: row | column\r\n    direction: column\r\n);\r\n\r\n// Layout root\r\n$_root: (\r\n    // {Color} 背景色\r\n    bgcolor: null\r\n);\r\n\r\n// Element UI badge(7)\r\n$_badge: (\r\n    // {Length} 内补白\r\n    padding:      0 .03rem,\r\n    // {Length} 边框厚度\r\n    border-width: 1px,\r\n    // {Color} 边框色\r\n    border-color: #f00,\r\n    // {Color} 背景色\r\n    bgcolor:      #f00,\r\n    // {Color} 文本色\r\n    color:        #fff,\r\n    // {Length} 圆角\r\n    radius:       .1rem,\r\n    // {Length} 字号\r\n    font-size:    .12rem\r\n);\r\n\r\n// Element Button(12)\r\n$_btn: (\r\n    // {Color} Length\r\n    border-width:   1px,\r\n    // {Color} 边框色\r\n    border-color:   #d36105,\r\n    // {Color} 背景色\r\n    bgcolor:        #ff801a,\r\n    // {Color} 文本色\r\n    color:          #fff,\r\n    // {Color} 激活时边框色\r\n    touch-border-color: null,\r\n    // {Color} 激活时背景色\r\n    touch-bgcolor:      null,\r\n    // {Color} 激活时文本色\r\n    touch-color:        null,\r\n    // {Length} 内补白(使用em让根据字号动态调整)\r\n    padding:        0 1.2em,\r\n    // {Length} 圆角半径\r\n    radius:         .05rem,\r\n    // {Length} 字号\r\n    font-size:      null,\r\n    // {Length} 宽度\r\n    width:          null,\r\n    // {Length} 高度\r\n    height:         .36rem\r\n);\r\n\r\n// Element checked(11)\r\n$_checked: (\r\n    // {String} 选中标记的内容，可以是自定义的iconfont编码\r\n    content:        \"\\f078\",\r\n    // {Length} 元件大小\r\n    size:           .2rem,\r\n    // {Length} 标签大小\r\n    font-size:      .12rem,\r\n    // {Length} 边框厚度\r\n    border-width:   null,\r\n    // {Color} 未选中时的边框色\r\n    border-color:   null,\r\n    // {Color} 未选中时的背景色\r\n    bgcolor:        null,\r\n    // {Color} 未选中时的标记颜色\r\n    color:          transparent,\r\n    // {Color} 激活边框色\r\n    on-border-color:null,\r\n    // {Color} 激活背景色\r\n    on-bgcolor:     null,\r\n    // {Color} 激活标记颜色\r\n    on-color:       #2b94ff,\r\n    // {Length} 圆角\r\n    radius:         .05rem\r\n);\r\n\r\n// Element loading(7)\r\n$_loading: (\r\n    // {Length} 菊花大小\r\n    ico-size:     .5rem,\r\n    // {Color} 菊花颜色\r\n    ico-color:    #212121,\r\n    // {Color} 背景颜色\r\n    bgcolor:      null,\r\n    // {Length} 字号\r\n    font-size:    null,\r\n    // {Color} 文本颜色\r\n    color:        map-get($base, color),\r\n    // {String} loading符号，可以是自定义的iconfont编码\r\n    content:      \"\\f089\"\r\n);\r\n\r\n// Element loadtip(3)\r\n$_loadtip: (\r\n    // {Color} 文本色\r\n    color:     #666,\r\n    // {Length} 字号\r\n    font-size: null,\r\n    // {Color} ico色\r\n    ico-color: map-get($base, link-color)\r\n);\r\n\r\n// Element range(6)\r\n$_range: (\r\n    // {Length} 滑轴高度\r\n    track-height:   .02rem,\r\n    // {Color} 滑轴色\r\n    track-color:    #ccc,\r\n    // {Color} 选中滑轴色\r\n    on-track-color: map-get($base, light-color),\r\n    // {Color} 选中刻度色\r\n    on-divide-color:map-get($base, light-color),\r\n    // {Length} 滑球高度\r\n    thumb-height:   .28rem,\r\n    // {Color} 滑块色\r\n    thumb-color:    #fff\r\n);\r\n\r\n// Element switch(4)\r\n$_switch: (\r\n    // {Color} 背景色\r\n    bgcolor:         map-get($base, border-color),\r\n    // {Color} 激活背景色\r\n    on-bgcolor:      #4bd763,\r\n    // {Color} 跟随背景色\r\n    follow-bgcolor:  map-get($base, bgcolor),\r\n    // {Color} 滑块色\r\n    thumb-color:     #fff\r\n);\r\n\r\n// Fragment actionsheet(9)\r\n$_actionsheet: (\r\n    // {Length} 外边距\r\n    margin:               .1rem,\r\n    // {Length} 圆角半径\r\n    radius:               .1rem,\r\n    // {Color} 边线色\r\n    border-color:         map-get($base, border-color),\r\n    // {Color} 背景色\r\n    bgcolor:              rgba(#fff, .95),\r\n    // {Color} 点击反馈背景色\r\n    touch-bgcolor:        rgba(#eee, .95),\r\n    // {Length} 子项高度\r\n    item-height:          .55rem,\r\n    // {Length} 子项字号\r\n    item-font-size:       .18rem,\r\n    // {Color} 子项文本色\r\n    item-color:           map-get($base, link-color),\r\n    // {Color} 重要操作子项文本色\r\n    item-important-color: #f00\r\n);\r\n\r\n// Fragment breadcrumb(6)\r\n$_breadcrumb: (\r\n    // {Length} 面包屑高度\r\n    height:         .44rem,\r\n    // {Color} 面包屑背景色\r\n    bgcolor:        #f0f0f0,\r\n    // {Color} 面包屑文本色\r\n    color:          map-get($base, color),\r\n    // {Color} 面包屑间隔色\r\n    arrow-color:    #ccc,\r\n    // {String} 面包屑间隔符号，可以是自定义的iconfont编码\r\n    arrow-content:  \"\\f07f\",\r\n    // {Length} 面包屑子项间隙\r\n    item-space:     .05rem\r\n);\r\n\r\n// Fragment calendar(18)\r\n$_calendar: (\r\n    // {Length} 星期bar高度\r\n    week-bar-height:      .22rem,\r\n    // {Color} 星期bar背景色\r\n    week-bar-bgcolor:     map-get($base, light-color),\r\n    // {Color} 星期bar文本色\r\n    week-bar-color:       #fff,\r\n    // {Length} 星期bar字号\r\n    week-bar-font-size:   .12rem,\r\n\r\n    // {Length} 每行高度\r\n    week-height:          .54rem,\r\n    // {Color} 每行文本色\r\n    week-color:           #000,\r\n\r\n    // {Length} 每日高度\r\n    day-height:           .24rem,\r\n    // {Length} 每日间距\r\n    day-margin:           .05rem 0 .02rem,\r\n    // {Length} 每日圆角\r\n    day-radius:           50%,\r\n    // {Length} 每日字号\r\n    day-font-size:        null,\r\n\r\n    // {color} 特殊日文本色\r\n    special-color:        #f50,\r\n    // {color} 周末文本色\r\n    weekend-color:        #f00,\r\n    // {color} 禁用日子文本色\r\n    disabled-color:       map-get($base, disabled-color),\r\n\r\n    // {color} 选中日期背景色\r\n    on-bgcolor:           map-get($base, light-color),\r\n    // {color} 选中日期文本色\r\n    on-color:             #fff,\r\n    // {color} 选中日期提示语文本色\r\n    on-tip-color:         map-get($base, light-color),\r\n    // {Length} 选中日期提示语字号\r\n    on-tip-font-size:     null,\r\n\r\n    // {color} 选中日期段背景色\r\n    range-bgcolor:        #eee\r\n);\r\n\r\n// Fragment card(11)\r\n$_card: (\r\n    // {Length} 外边距\r\n    margin:          .1rem,\r\n    // {Length} 圆角半径长度\r\n    radius:          null,\r\n    // {Length} 外边框厚度\r\n    border-width:    1px,\r\n    // {Color} 外边框色\r\n    border-color:    #ccc,\r\n    // {Color} 背景色\r\n    bgcolor:         #fff,\r\n    // {Color} 文本色\r\n    color:           null,\r\n    // {Length} 字号大小\r\n    font-size:       null,\r\n    // {Length} 头部边框厚度\r\n    hd-border-width: 0 0 1px,\r\n    // {Color} 头部边框色\r\n    hd-border-color: #ddd,\r\n    // {Length} 底部边框厚度\r\n    ft-border-width: 1px 0 0,\r\n    // {Color} 底部边框色\r\n    ft-border-color: #ddd\r\n);\r\n\r\n// Fragment carousel(8)\r\n$_carousel: (\r\n    // {Length} 按钮大小\r\n    btn-size:           .44rem,\r\n    // {Color} 按钮背景色\r\n    btn-bgcolor:        rgba(#09a5c4, .8),\r\n    // {Color} 按钮文本色\r\n    btn-color:          #fff,\r\n    // {Color} 按钮按下时背景色\r\n    touch-btn-bgcolor:  rgba(#09a5c4, .5),\r\n    // {Color} 按钮按下时文本色\r\n    touch-btn-color:    null,\r\n    // {Length} 索引大小\r\n    index-size:         .1rem,\r\n    // {Color} 索引背景色\r\n    index-bgcolor:      #85c8d1,\r\n    // {Color} 索引的当前项背景色\r\n    on-index-bgcolor:   #09a5c4\r\n);\r\n\r\n// Fragment dialog(8)\r\n$_dialog: (\r\n    // {Length} 宽度\r\n    width:           null,\r\n    // {Length} 高度\r\n    height:          null,\r\n    // {Length} 圆角\r\n    radius:          .1rem,\r\n    // {Color} 边框色\r\n    border-color:    map-get($base, border-color),\r\n    // {Color} 标题颜色\r\n    title-color:     map-get($base, color),\r\n    // {Length} 标题文字大小\r\n    title-font-size: .16rem,\r\n    // {Length} 主体区域间隙\r\n    bd-padding:      .03rem .1rem .15rem,\r\n    // {Length} 主体区域文字大小\r\n    bd-font-size:    .16rem\r\n);\r\n\r\n// Fragment group(7)\r\n$_group: (\r\n    // {Length} 组标题内补白\r\n    label-padding:      .03rem .1rem,\r\n    // {Color} 组标题背景色\r\n    label-bgcolor:      #eee,\r\n    // {Length} 组标题文本大小\r\n    label-font-size:    .13rem,\r\n    // {Color} 组标题边框色\r\n    label-border-color: #eee,\r\n    // {Length} 索引宽度\r\n    index-width:        .3rem,\r\n    // {Color} 索引文本色\r\n    index-color:        #555,\r\n    // {Length} 索引字号\r\n    index-font-size:    .12rem\r\n);\r\n\r\n// Fragment header(12)\r\n$_header: (\r\n    // {Length} 高度\r\n    height:         .44rem,\r\n    // {Length} 两侧的子项宽度\r\n    item-width:     .6rem,\r\n    // {Length} 两侧的子项离边界的间隙\r\n    item-space:     .15rem,\r\n    // {Length} 边框厚度\r\n    border-width:   0 0 1px,\r\n    // {Color} 边框色\r\n    border-color:   map-get($base, light-color),\r\n    // {Color} 背景色\r\n    bgcolor:        map-get($base, light-color),\r\n    // {Color} 文本色\r\n    color:          #fff,\r\n    // {Length} 文本大小\r\n    font-size:      .18rem,\r\n    // {Color} 文本色\r\n    item-color:     #fff,\r\n    // {Color} 两侧的子项ico颜色\r\n    item-ico-color: #7ff,\r\n    // {Length} 两侧的子项文本大小\r\n    item-font-size: null,\r\n    // {Length} 两侧的子项ico大小\r\n    item-ico-size:  .2rem\r\n);\r\n\r\n// Fragment list(17)\r\n$_list: (\r\n    // {Length} 列表外边距\r\n    margin:            null,\r\n    // {Length} 列表圆角\r\n    radius:            null,\r\n    // {Length} 列表边框厚度\r\n    border-width:      0 0 1px,\r\n    // {Color} 列表边框色\r\n    border-color:      map-get($base, border-color),\r\n    // {Length} 列表项内补白，列表项有最小高度.44rem\r\n    item-padding:      .11rem .1rem .12rem,\r\n    // {Length} 列表组头内补白\r\n    label-padding:     .03rem .1rem,\r\n    // {Color} 列表组头背景色\r\n    label-bgcolor:     #eee,\r\n    // {Color} 点击反馈背景色\r\n    touch-bgcolor:     #f8f8f8,\r\n    // {Color} 选中背景色\r\n    on-bgcolor:        null,\r\n    // {Color} 选中文本色\r\n    on-color:          null,\r\n    // {Color} 列表项边框色\r\n    item-border-color: map-get($base, sub-border-color),\r\n    // {Color} 列表项组名边框色\r\n    label-border-color:#eee,\r\n    // {Length} 列表项字号\r\n    item-font-size:    null,\r\n    // {Length} 列表组头字号\r\n    label-font-size:   .13rem,\r\n    // {Length} 列表项下边线距离左侧的间隙\r\n    item-border-space: .1rem,\r\n    // {Length} 更多区域字号\r\n    more-font-size:    .12rem,\r\n    // {Color} 更多区域文本色\r\n    more-color:        #aaa\r\n);\r\n\r\n// Fragment modal(2)\r\n$_modal: (\r\n    // {Color} 遮罩背景色\r\n    bgcolor:      rgba(#000, .2),\r\n    // {Color} 内容区背景色\r\n    cont-bgcolor: null\r\n);\r\n\r\n// Fragment number(11)\r\n$_number: (\r\n    // {Length} 宽度\r\n    width:             1.2rem,\r\n    // {Length} 高度\r\n    height:            .36rem,\r\n    // {Length} 外边框圆角半径\r\n    radius:            .03rem,\r\n    // {Length} 边框厚度\r\n    border-width:      1px,\r\n    // {Color} 外边框色\r\n    border-color:      map-get($base, border-color),\r\n    // {color} 输入框文本色\r\n    color:             map-get($base, color),\r\n    // {Length} 加减号区域圆角半径\r\n    sign-radius:       null,\r\n    // {Length} 加减号区域边框厚度\r\n    sign-border-width: 1px,\r\n    // {Color} 加减号区域背景色\r\n    sign-bgcolor:      map-get($base, bgcolor),\r\n    // {Color} 加减号区域文本色\r\n    sign-color:        #999,\r\n    // {Length} 字号\r\n    font-size:         .16rem\r\n);\r\n\r\n// Fragment picker(3)\r\n$_picker: (\r\n    // {Integer} 默认显示几个列表项\r\n    item:        5,\r\n    // {Length} 每个列表项的高度\r\n    item-height: .3rem,\r\n    // {Color} 边框色\r\n    border-color: map-get($base, border-color)\r\n);\r\n\r\n// Fragment popup(5)\r\n$_popup: (\r\n    // {Color} 高度\r\n    height:       null,\r\n    // {Color} 边框色\r\n    border-color: #999,\r\n    // {Color} 头部背景色\r\n    hd-bgcolor:   #f0f0f0,\r\n    // {Color} 按钮文本色\r\n    btn-color:    map-get($base, link-color),\r\n    // {Color} 背景色\r\n    bgcolor:      #fff\r\n);\r\n\r\n// Fragment proportion(7)\r\n$_proportion: (\r\n    // {Length} 外边距\r\n    margin:        .1rem,\r\n    // {Color} 底色\r\n    bgcolor:       #eee,\r\n    // {Length} 高度\r\n    height:        .35rem,\r\n    // {Length} 最小高度\r\n    min-height:    .05rem,\r\n    // {Color} 文本色\r\n    color:         #fff,\r\n    // {Length} 字号\r\n    font-size:     null,\r\n    // {Color} 当前状态底色\r\n    inner-bgcolor: red\r\n);\r\n\r\n// Fragment rating(4)\r\n$_rating: (\r\n    // {Length} 单项宽度\r\n    item-width:  .18rem,\r\n    // {Length} 单项高度\r\n    item-height: .18rem,\r\n    // {Length} 子项间间隙\r\n    item-space:  .1rem,\r\n    // {String} 图片URL\r\n    url:         \"star3.png\"\r\n);\r\n\r\n// Fragment search(12)\r\n$_search: (\r\n    // {Length} 搜索框区域内边距\r\n    padding:       .07rem .1rem,\r\n    // {Color} 搜索框区域底色\r\n    bgcolor:       #eee,\r\n    // {Length} 搜索区字号\r\n    font-size:     null,\r\n    // {Length} 搜索框高度\r\n    input-height:  .3rem,\r\n    // {Length} 搜索框及搜索按钮圆角\r\n    input-radius:  .05rem,\r\n    // {Color} 搜索框底色\r\n    input-bgcolor: #fff,\r\n    // {Color} 输入框文本色\r\n    input-color:   map-get($base, color),\r\n    // {Color} 输入框placeholder文本色\r\n    placeholder-color:#bbb,\r\n    // {Color} 搜索按钮底色\r\n    btn-bgcolor:   map-get($base, light-color),\r\n    // {Color} 搜索按钮文本色\r\n    btn-color:     #fff,\r\n    // {Length} 取消按钮区域宽度\r\n    cancel-width:  .6rem,\r\n    // {Color} 取消按钮颜色\r\n    cancel-color:  map-get($base, link-color)\r\n);\r\n\r\n// Fragment swipemenu(5)\r\n$_swipemenu: (\r\n    // {Length} front 内补白\r\n    padding:              null,\r\n    // {Length} action 宽度\r\n    action-width:         1rem,\r\n    // {Color} action 背景色\r\n    action-bgcolor:       #ccc,\r\n    // {Color} action 前景色\r\n    action-color:         #fff,\r\n    // {Color} action 前景色\r\n    action-first-bgcolor: red\r\n);\r\n\r\n// Fragment suggest(16)\r\n$_suggest: (\r\n    // {Length} 搜索区内补白\r\n    padding:          .07rem .1rem,\r\n    // {Color} 搜索区边框色\r\n    border-color:     map-get($base, border-color),\r\n    // {Color} 搜索区背景色\r\n    bgcolor:          #fff,\r\n    // {Length} 搜索区字号\r\n    font-size:        null,\r\n    // {Length} 输入框高度\r\n    input-height:     .3rem,\r\n    // {Length} 输入框圆角\r\n    input-radius:     .05rem,\r\n    // {Color} 输入框背景色\r\n    input-bgcolor:    map-get($base, border-color),\r\n    // {Color} 输入框文本色\r\n    input-color:      map-get($base, color),\r\n    // {Color} 输入框placeholder文本色\r\n    placeholder-color:#fff,\r\n    // {Color} 输入框右侧图标颜色\r\n    ico-color:        #999,\r\n    // {Length} 取消按钮区域宽度\r\n    cancel-width:     .6rem,\r\n    // {Color} 取消按钮颜色\r\n    cancel-color:     map-get($base, link-color),\r\n    // {Color} 内容区背景色\r\n    cont-bgcolor:     null,\r\n    // {Color} 遮罩背景色\r\n    mask-bgcolor:     rgba(#000, .2),\r\n    // {Color} 推荐区背景色\r\n    recommend-bgcolor:rgba(#fff, .8),\r\n    // {Color} 结果区背景色\r\n    result-bgcolor:   #fff\r\n);\r\n\r\n// Fragment tab(15)\r\n$_tab: (\r\n    // {Length} 组件宽度\r\n    width:              null,\r\n    // {Length} 组件高度\r\n    height:             .44rem,\r\n    // {Length} 圆角半径\r\n    radius:             null,\r\n    // {Length} 边框厚度\r\n    border-width:       1px 0 0 0,\r\n    // {Color} 边框色\r\n    border-color:       map-get($base, border-color),\r\n    // {Color} tab背景色\r\n    bgcolor:            #fafafa,\r\n    // {Color} tab文本色\r\n    color:              map-get($base, sub-color),\r\n    // {Color} tab激活背景色\r\n    on-bgcolor:         null,\r\n    // {Color} tab激活文本色\r\n    on-color:           map-get($base, light-color),\r\n    // {Length} 文本大小\r\n    font-size:          null,\r\n    // {Length} 水平ico大小\r\n    x-ico-size:         .12rem,\r\n    // {Length} 垂直ico大小\r\n    y-ico-size:         .2rem,\r\n    // {Length} only ico大小\r\n    only-ico-size:      .28rem,\r\n    // {Length} item间隔线高度\r\n    item-border-height: 100%,\r\n    // {Color} item间隔线颜色\r\n    item-border-color:  transparent\r\n);\r\n\r\n// Fragment table(10)\r\n$_table: (\r\n    // {Length} 表头部内补白\r\n    width:               100%,\r\n    // {Boolean} 是否需要纵向边框\r\n    has-vertical-border: false,\r\n    // {Length} 表头部内补白\r\n    thead-padding:       .05rem .1rem,\r\n    // {Length} 表主体内补白\r\n    tbody-padding:       .1rem,\r\n    // {Color} 边框色\r\n    border-color:        map-get($base, border-color),\r\n    // {Color} 表头部背景色\r\n    thead-bgcolor:       #eee,\r\n    // {Color} 表主体奇数行背景色\r\n    odd-bgcolor:         null,\r\n    // {Color} 表主体偶数行背景色\r\n    even-bgcolor:        null,\r\n    // {Color} 表主体激活行背景色\r\n    touch-bgcolor:       null,\r\n    // {Color} 表主体选中行背景色\r\n    on-bgcolor:          null\r\n);\r\n\r\n// Fragment timeline(12)\r\n$_timeline: (\r\n    // {Length} timeline元件内边距\r\n    padding:            .1rem,\r\n    // {Length} item底部间距\r\n    item-padding:       0 0 .1rem,\r\n    // {Length} 时间区域宽度\r\n    side-width:         .5rem,\r\n    // {Length} 时间区域右侧内边距\r\n    side-padding:       0 .1rem 0 0,\r\n    // {Length} 时间区域右侧外边距\r\n    side-margin:        0 .15rem 0 0,\r\n    // {Color} 时间区域文本色\r\n    side-color:         #666,\r\n    // {Length} 时间轴上的关键帧顶部偏移距离\r\n    point-top:          .08rem,\r\n    // {Length} 时间轴上的关键帧尺寸大小\r\n    point-size:         .07rem,\r\n    // {Length} 时间轴上的关键帧边框厚度\r\n    point-border-width: 1px,\r\n    // {Color} 时间轴上的关键帧边框色\r\n    point-border-color: #999,\r\n    // {Color} 时间轴线条边框厚度\r\n    border-width:       1px,\r\n    // {Length} 时间轴线条边框色\r\n    border-color:       #ddd,\r\n    // {Length} 时间轴首个子项文本颜色\r\n    first-item-color:   #f60\r\n);\r\n\r\n// Fragment toolbar(11)\r\n$_toolbar: (\r\n    // {Length} 宽度\r\n    width:          null,\r\n    // {Length} 高度\r\n    height:         .44rem,\r\n    // {Length} 边框厚度\r\n    border-width:   1px,\r\n    // {Color} 边框色\r\n    border-color:   #d36105,\r\n    // {Color} 背景色\r\n    bgcolor:        #ff801a,\r\n    // {Color} 文本色\r\n    color:          #fff,\r\n    // {Color} 选中时背景色\r\n    on-bgcolor:     #f06d05,\r\n    // {Color} 选中时文本色\r\n    on-color:       null,\r\n    // {Length} 内补白\r\n    item-padding:    0 .15rem,\r\n    // {Length} 圆角半径\r\n    radius:         .1rem,\r\n    // {Length} 字号\r\n    font-size:      null\r\n);\r\n\r\n// Fragment toast(5)\r\n$_toast: (\r\n    // {Length} 内补白\r\n    padding: .06rem .15rem,\r\n    // {Length} 圆角\r\n    radius:  .05rem,\r\n    // {Color} 背景色\r\n    bgcolor: rgba(#000, .5),\r\n    // {Color} 文本色\r\n    color:   #fff\r\n);\r\n\r\n// Fragment vcode(6)\r\n$_vcode: (\r\n    // {Length} 输入框高度\r\n    height:       .44rem,\r\n    // {Color} 输入框背景色\r\n    bgcolor:      #fff,\r\n    // {Length} 输入框圆角半径\r\n    radius:       .05rem,\r\n    // {Length} 输入框字号\r\n    font-size:    .16rem,\r\n    // {Length} 输入框边框厚度\r\n    border-width: 1px,\r\n    // {Color} 输入框边框色\r\n    border-color:  #000\r\n);\n\n\n// WEBPACK FOOTER //\n// ./src/styles/E:/vue_product/sxsx_project/src/styles/lib/core/variables.scss","\r\n#app{height:100%;width:100%}\r\n.index{\r\n\theight:100%;\r\n\t@include flexbox();\r\n\t@include flex-direction(column);\r\n\t\r\n}\r\nheader{\r\n\theight:44px;\r\n\tbackground:#4be137;\r\n\tposition:relative;\r\n\th2{\r\n\t\tcolor:#fff;\r\n\t\ttext-align:center;\r\n\t\tline-height:44px;\r\n\t\tfont-size:.16rem;\r\n\t\tletter-spacing:4px\r\n\t}\r\n\tspan{\r\n\t\tposition:absolute;\r\n\r\n\t}\r\n\t.z-right{right:0;top:0px;\r\n\t\twidth:44px;\r\n\t\theight:44px;\r\n\t\tdisplay:block;\r\n\t\ttext-align:center;\r\n\t\tline-height:44px;\r\n\t\tcolor:#fff;\r\n\t\tfont-size:.16rem\r\n\r\n\t\t}\r\n\t.z-left{left:15px;top:7px;\r\n\t\twidth:45px;\r\n\t\theight:27px;\r\n\t\tdisplay:block;\r\n\t\timg{\r\n\t\t\twidth:100%;\r\n\t\t\theight:100%\r\n\t\t}\r\n\t}\r\n}\r\nsection{\r\n    width:100%;\r\n\toverflow:hidden;\r\n\toverflow-y:auto;\r\n\tflex:1;\r\n\r\n}\r\nnav{\r\n\theight:44px;\r\n\t\r\n\tul{\r\n\t  @include flexbox();\r\n\t  width:100%;\r\n\t  height:100%;\r\n\t  li{\r\n\t    height:100%;\r\n\t    width:25%;\r\n\t    @include flexbox();\r\n\t    @include flex-direction(column);\r\n\t    @include justify-content(center);\r\n\t    @include align-items(center)\r\n\t    color:green;\r\n        span{\r\n        \t\r\n        \tfont-size:.12rem;\r\n        }\r\n\t  }\r\n\t}\r\n}\r\n\r\n.search{\r\n    width:100%;\r\n\theight:100%;\r\n\tfont-size:50px;\r\n\tcolor:yellow;\r\n\tbackground:blue\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/styles/E:/vue_product/sxsx_project/src/styles/usage/module/m-index.scss","@charset \"utf-8\";\r\n/**\r\n * @module Flexbox\r\n * @description 定义显示类型为伸缩盒\r\n * @method flexbox\r\n * @version 1.0.0\r\n * @param {String} $flexbox 默认值：flex，可选值：flex | inline-flex <1.0.0>\r\n */\r\n@mixin flexbox($flexbox: flex) {\r\n    @if $flexbox == inline-flex {\r\n        $flexbox: \"inline-\";\r\n    } @else {\r\n        $flexbox: \"\";\r\n    }\r\n    // 老式浏览器（实验性质支持3个阶段草案）\r\n    // 原始草案：20090723\r\n    // 过渡草案：20110322-20120322（以后面这个日期为准）\r\n    // 最新草案：20120612-20140925（以后面这个日期为准）\r\n    @if map-get($setting, is-vendor-prefix) {\r\n        @each $vendor in map-get($setting, vendor-prefix) {\r\n            @if $vendor != -ms- {\r\n                // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                display: #{$vendor}#{$flexbox}box;\r\n                display: #{$vendor}#{$flexbox}flex;\r\n            } @else {\r\n                // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                display: #{$vendor}#{$flexbox}flexbox;\r\n            }\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    display: #{$flexbox}flex;\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义伸缩盒子元素如何分配空间\r\n * @method flex\r\n * @version 1.0.0\r\n * @param {Number} $flex 取值与`flex`属性一致，默认值：1 <1.0.0>\r\n * @param {String} $direction 默认值: row，可选值：row | column <1.5.0>\r\n */\r\n@mixin flex($flex: 1, $direction: row) {\r\n    // 老式浏览器（实验性质支持3个阶段草案）\r\n    // 原始版本box-flex并不是复合属性，所以只有一个为数字的值\r\n    @if map-get($setting, is-vendor-prefix) {\r\n        @each $vendor in map-get($setting, vendor-prefix) {\r\n            @if $vendor != -ms- {\r\n                // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                #{$vendor}box-flex: $flex;\r\n                #{$vendor}flex: $flex;\r\n            } @else {\r\n                // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                #{$vendor}flex: $flex;\r\n            }\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    flex: $flex;\r\n    // 修复Android Browser4.3及以下，iOS Safari6.1及以下按比例分配错误的问题（同时还包括flex嵌套时分配错误）\r\n    @if $direction == row {\r\n        width: .1px;\r\n    } @else {\r\n        height: .1px;\r\n    }\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义伸缩盒子元素的排版顺序\r\n * @method order\r\n * @version 1.0.0\r\n * @param {Integer} $order 取值与`order`属性一致，默认值：1 <1.0.0>\r\n */\r\n@mixin order($order: 1) {\r\n    // 老式浏览器（实验性质支持3个阶段草案）\r\n    @if map-get($setting, is-vendor-prefix) {\r\n        @each $vendor in map-get($setting, vendor-prefix) {\r\n            @if $vendor != -ms- {\r\n                // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                #{$vendor}box-ordinal-group: $order;\r\n                #{$vendor}order: $order;\r\n            } @else {\r\n                // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                #{$vendor}flex-order: $order;\r\n            }\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    order: $order;\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义弹性盒子元素流动方向及遇见边界时是否换行(要求系统：iOS7.0+, Android4.4+)\r\n * @method flex-flow\r\n * @version 2.0.0\r\n * @param {String} $flex-flow 取值与`flex-flow`属性一致，默认值：row nowrap <2.0.0>\r\n */\r\n@mixin flex-flow($flex-flow: row nowrap) {\r\n    // 老式浏览器（实验性质支持过渡和最新2个阶段草案）+ 现代浏览器\r\n    @include prefix(flex-flow, $flex-flow);\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义伸缩盒子元素的流动方向\r\n * @method flex-direction\r\n * @version 1.0.0\r\n * @param {String} $flex-direction 取值与`flex-direction`属性一致，默认值：row <1.0.0>\r\n */\r\n@mixin flex-direction($flex-direction: row) {\r\n    // 老式浏览器（实验性质支持原始草案）\r\n    // 当厂商前缀不为`-ms-`时输出原始草案厂商前缀版\r\n    @if $flex-direction == row {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    #{$vendor}box-orient: horizontal;\r\n                    #{$vendor}box-direction: normal;\r\n                }\r\n            }\r\n        }\r\n    } @else if $flex-direction == column {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    #{$vendor}box-orient: vertical;\r\n                    #{$vendor}box-direction: normal;\r\n                }\r\n            }\r\n        }\r\n    } @else if $flex-direction == row-reverse {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    #{$vendor}box-orient: horizontal;\r\n                    #{$vendor}box-direction: reverse;\r\n                }\r\n            }\r\n        }\r\n    } @else if $flex-direction == column-reverse {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    #{$vendor}box-orient: vertical;\r\n                    #{$vendor}box-direction: reverse;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 老式浏览器（实验性质支持过渡及最新草案）\r\n    @if map-get($setting, is-vendor-prefix) {\r\n        @each $vendor in map-get($setting, vendor-prefix) {\r\n            // `flex-direction`属性在过渡和最新草案中语法一致\r\n            #{$vendor}flex-direction: $flex-direction;\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    flex-direction: $flex-direction;\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义弹性盒子元素溢出后排版(要求系统：iOS7.0+, Android4.4+)\r\n * @method flex-wrap\r\n * @version 1.0.0\r\n * @param {String} $flex-wrap 取值与`flex-wrap`属性一致，默认值：nowrap <1.0.0>\r\n */\r\n@mixin flex-wrap($flex-wrap: nowrap) {\r\n    // 老式浏览器（实验性质支持过渡和最新2个阶段草案）+ 现代浏览器\r\n    // 原始草案有`box-lines`对应本属性，不过虽然被webkit实验性质支援，但却未被任何浏览器实现（等同于未实现）\r\n    @include prefix(flex-wrap, $flex-wrap);\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义弹性容器主轴对齐方式(其中`space-around`值需要iOS7.0+,Android4.4+)\r\n * @method justify-content\r\n * @version 1.0.0\r\n * @param {String} $justify-content 取值与`justify-content`属性一致，默认值：center <1.0.0>\r\n */\r\n@mixin justify-content($justify-content: center) {\r\n    // 老式浏览器（实验性质支持3个阶段草案）\r\n    @if $justify-content == center {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    #{$vendor}box-pack: $justify-content;\r\n                    #{$vendor}justify-content: $justify-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-pack: $justify-content;\r\n                }\r\n            }\r\n        }\r\n    } @else if $justify-content == flex-start {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    #{$vendor}box-pack: start;\r\n                    #{$vendor}justify-content: $justify-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-pack: start;\r\n                }\r\n            }\r\n        }\r\n    } @else if $justify-content == flex-end {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    #{$vendor}box-pack: end;\r\n                    #{$vendor}justify-content: $justify-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-pack: end;\r\n                }\r\n            }\r\n        }\r\n    } @else if $justify-content == space-between {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    #{$vendor}box-pack: justify;\r\n                    #{$vendor}justify-content: $justify-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-pack: justify;\r\n                }\r\n            }\r\n        }\r\n    } @else if $justify-content == space-around {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    // 原始草案不支持`space-around`(过渡版本中的`distribute`) 值\r\n                    //#{$vendor}box-pack: distribute;\r\n                    #{$vendor}justify-content: $justify-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-pack: distribute;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    justify-content: $justify-content;\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义多行弹性容器侧轴对齐方式(要求系统：iOS7.0+,Android4.4+)\r\n * @method align-content\r\n * @version 1.8.5\r\n * @param {String} $align-content 取值与`align-content`属性一致，默认值：center <1.8.5>\r\n */\r\n@mixin align-content($align-content: center) {\r\n    // 老式浏览器（实验性质支持2个阶段草案）\r\n    @if $align-content == flex-start {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-content: $align-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-line-pack: start;\r\n                }\r\n            }\r\n        }\r\n    } @else if $align-content == flex-end {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-content: $align-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-line-pack: end;\r\n                }\r\n            }\r\n        }\r\n    } @else if $align-content == space-between {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-content: $align-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-line-pack: justify;\r\n                }\r\n            }\r\n        }\r\n    } @else if $align-content == space-around {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-content: $align-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-line-pack: distribute;\r\n                }\r\n            }\r\n        }\r\n    } @else if $align-content == center or $align-content == stretch {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-content: $align-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-line-pack: $align-content;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    align-content: $align-content;\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义单行弹性容器侧轴对齐方式\r\n * @method align-items\r\n * @version 1.0.0\r\n * @param {String} $align-items 取值与`align-items`属性一致，默认值：center <1.0.0>\r\n */\r\n@mixin align-items($align-items: center) {\r\n    // 老式浏览器（实验性质支持3个阶段草案）\r\n    @if $align-items == flex-start {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    #{$vendor}box-align: start;\r\n                    #{$vendor}align-items: $align-items;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-align: start;\r\n                }\r\n            }\r\n        }\r\n    } @else if $align-items == flex-end {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    #{$vendor}box-align: end;\r\n                    #{$vendor}align-items: $align-items;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-align: end;\r\n                }\r\n            }\r\n        }\r\n    } @else {\r\n        // 取值为center | baseline | stretch时，3个阶段草案均相同\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    #{$vendor}box-align: $align-items;\r\n                    #{$vendor}align-items: $align-items;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-align: $align-items;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    align-items: $align-items;\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义弹性容器中子元素自身的在侧轴对齐方式(要求系统：iOS7.0+,Android4.4+)\r\n * @method align-self\r\n * @version 1.0.0\r\n * @param {String} $align-self 取值与`align-self`属性一致，默认值：center <1.0.0>\r\n */\r\n@mixin align-self($align-self: center) {\r\n    // 老式浏览器（实验性质支持3个阶段草案）\r\n    @if $align-self == flex-start {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-self: $align-self;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-item-align: start;\r\n                }\r\n            }\r\n        }\r\n    } @else if $align-self == flex-end {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-self: $align-self;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-item-align: end;\r\n                }\r\n            }\r\n        }\r\n    } @else if $align-self == auto or $align-self == center or $align-self == baseline or $align-self == stretch {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-self: $align-self;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-item-align: $align-self;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    align-self: $align-self;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/styles/E:/vue_product/sxsx_project/src/styles/lib/core/classes/_flex.scss","@font-face{\r\n\tfont-family:\"yofont\";\r\n\tsrc:url('/static/iconfont/iconfont.woff') format('woff'),url('/static/iconfont/iconfont.ttf') format('truetype'),\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/styles/E:/vue_product/sxsx_project/src/styles/usage/module/common.scss"],"sourceRoot":""}